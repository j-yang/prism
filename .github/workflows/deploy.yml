name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: # 允许手动触发

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies (frontend only)
      run: npm ci --only=production --ignore-scripts

    - name: Install dev dependencies
      run: npm install --only=dev

    - name: Build application (exclude server)
      run: npm run build:frontend-only
      env:
        NODE_ENV: production
        GITHUB_ACTIONS: true
        VITE_BUILD_TARGET: frontend

    - name: Remove server files from build
      run: |
        rm -rf dist/server/ || true
        rm -rf dist/uploads/ || true
        find dist/ -name "*.js" -exec grep -l "express\|multer\|ssh2-sftp-client" {} \; | xargs rm -f || true

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    # 只在推送到主分支时部署，不在 PR 时部署
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
